#+title: Exercise 3
* Prompt
Modify the ~make-account~ procedure from the previous exercise so that if there are 7 consecutive password misinput, you will call the cops.
* Solution
:PROPERTIES:
:header-args:racket: :tangle ./src/exercise-4.rkt
:END:

Here is the modification to the ~make-account~ procedure. What we did here was make a counter procedure that will return true every ~n~ calls. We use this periodic function to determine when we are calling the cops.

#+begin_src racket :exports code :mkdirp yes :comments both
#lang sicp

(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin
          (set! balance (- balance amount))
          balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (incorrect-password . x)
    "Incorrect password")
  (define (call-the-cops . x)
    "Calling the cops")
  ;; Return true if the returned object has been called num times
  (define (counter num)
    (let ([n 0])
      (lambda ()
        (set! n (+ n 1))
        (if (= n num)
            (begin
              (set! n 0)
              true)
            false))))
  (let ([count (counter 7)])
    (lambda (p m)
      (if (not (and (symbol? p) (eq? p password)))
          (if (count) call-the-cops incorrect-password)
          (cond
            [(eq? m 'withdraw) withdraw]
            [(eq? m 'deposit) deposit]
            [else (error "Unknown request: MAKE-ACCOUNT" m)])))))
#+end_src

The following is the testing calls. We are not employing assertions yet.

#+begin_src racket :exports code :mkdirp yes :comments both
(define acc (make-account 100 'secret-password))
((acc 'secret-password 'withdraw) 40)
((acc 'some-other-passwordf 'deposit) 50)
((acc 'some-other-passwordf 'deposit) 50)
((acc 'some-other-passwordf 'deposit) 50)
((acc 'some-other-passwordf 'deposit) 50)
((acc 'some-other-passwordf 'deposit) 50)
((acc 'some-other-passwordf 'deposit) 50)
((acc 'some-other-passwordf 'deposit) 50)
((acc 'some-other-passwordf 'deposit) 50)
#+end_src


#+begin_src sh :exports both
racket ./src/exercise-4.rkt
#+end_src

#+RESULTS:
| 60         |           |       |
| "Incorrect | password" |       |
| "Incorrect | password" |       |
| "Incorrect | password" |       |
| "Incorrect | password" |       |
| "Incorrect | password" |       |
| "Incorrect | password" |       |
| "Calling   | the       | cops" |
| "Incorrect | password" |       |

Yep, this is what we expected.
