#+title: Exercise 62
* Prompt
Use the results of the previous two exercises to define a procedure ~div-series~ that divides two power series. ~div-series~ should work for any two series, provided that the denominator series begin with a nonzero constant term. (If the denominator has a zero constant term, then ~div-series~ should signal an error.) Show how to use ~div-series~ together with the result of exercise 3.59 to generate the power series for a tangent.
* Solution
:properties:
:header-args:racket: :tangle ./src/exercise-62.rkt :comments yes
:end:

#+begin_src racket :exports none
#lang sicp
(#%require "modules/assert-tool.rkt"
           "modules/stream-series.rkt"
           "modules/stream-series.rkt")
#+end_src

Once more, we implement the ~div-series~ procedure in a different document to allow for better reuse of the code. You may find the implementation [[file:stream-series.org][here]].

** Test

We are going to test by dividing series by the same series, and expecting 1. We are also going to show the tangent taylor series.

#+begin_src racket :exports code
(assert-list-infinite-stream (list 1 0 0 0 0 0 0) (div-series cosine-series cosine-series))
(assert-list-infinite-stream (list 1 0 0 0 0 0 0) (div-series exp-series exp-series))
(assert-list-infinite-stream (list 0 1 0 (/ 1 3) 0 (/ 2 15) 0 (/ 17 315))
                             (div-series sine-series cosine-series))
#+end_src

** Result
#+begin_src bash :exports both :results output
racket ./src/exercise-62.rkt
#+end_src

#+RESULTS:
:
: pass: (1 0 0 0 0 0 0) == ( 1 0 0 0 0 0 0)
: pass: (1 0 0 0 0 0 0) == ( 1 0 0 0 0 0 0)
: pass: (0 1 0 1/3 0 2/15 0 17/315) == ( 0 1 0 1/3 0 2/15 0 17/315)

Hooray! We have passed our tests.
